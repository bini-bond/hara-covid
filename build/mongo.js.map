{"version":3,"sources":["../src/mongo.js"],"names":["conf","MongoClient","connect","host","port","useNewUrlParser","useUnifiedTopology","conn","console","log","db","dbConnect","names","name","createCollection","createCollections","dropDatabase","removeFs","param","obj","constructor","Array","collection","COLLNAME","insertMany","res","write","COLNAME","find","query","fields","toArray","read","updateOne","$set","update"],"mappings":";;;;;;;;qEAGO,iBAAyBA,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcC,qBAAYC,OAAZ,gBACJF,KAAKG,IADD,SACSH,KAAKI,IADd,EAEjB,EAAEC,iBAAiB,IAAnB,EAAyBC,oBAAoB,IAA7C,EAFiB,CADd;;AAAA;AACCC,gBADD;;AAKL,gBAAGA,IAAH,EAASC,QAAQC,GAAR,CAAYF,IAAZ;AACHG,cAND,GAMMH,KAAKG,EAAL,CAAQV,KAAKU,EAAb,CANN;AAAA,6CAOEA,EAPF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,S;;;;;;sEAUf,kBAAiCD,EAAjC,EAAqCE,KAArC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACWA,KADX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACGC,gBADH;AAAA;AAAA,mBAEGH,GAAGI,gBAAH,CAAoBD,IAApB,CAFH;;AAAA;AAGHL,oBAAQC,GAAR,iBAA0BI,IAA1B;;AAHG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeE,iB;;;;;;sEAOf,kBAAwBL,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCA,GAAGM,YAAH,EADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,Q;;;;;;sEAIf,kBAAqBP,EAArB,EAAyBQ,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,gBAAIA,MAAMC,GAAN,CAAUC,WAAV,KAA0BC,KAA9B,EAAqC;AACnCH,oBAAMC,GAAN,GAAY,CAACD,MAAMC,GAAP,CAAZ;AACD;;AAHI;AAAA,mBAKaT,GAAGY,UAAH,CAAcJ,MAAMK,QAApB,EAA8BC,UAA9B,CAAyCN,MAAMC,GAA/C,CALb;;AAAA;AAKCM,eALD;AAAA,8CAOEA,GAPF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,K;;;;;;sEAUf,kBAAoBhB,EAApB,EAAwBQ,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaR,GACfY,UADe,CACJJ,MAAMS,OADF,EAEfC,IAFe,CAEVV,MAAMW,KAFI,EAEGX,MAAMY,MAFT,EAGfC,OAHe,EADb;;AAAA;AACCN,eADD;AAAA,8CAMEA,GANF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeO,I;;;;;;sEASf,kBAAsBtB,EAAtB,EAA0BQ,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaR,GACfY,UADe,CACJJ,MAAMS,OADF,EAEfM,SAFe,CAELf,MAAMW,KAFD,EAEQ,EAACK,MAAMhB,MAAMC,GAAb,EAFR,CADb;;AAAA;AACCM,eADD;AAAA,8CAKEA,GALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeU,M;;;;;AA1CtB;;2cADA","file":"mongo.js","sourcesContent":["// var MongoClient = require('mongodb').MongoClient;\nimport { MongoClient } from \"mongodb\";\n\nexport async function dbConnect(conf) {\n  const conn = await MongoClient.connect(\n    `mongodb://${conf.host}:${conf.port}`,\n    { useNewUrlParser: true, useUnifiedTopology: true }\n  );\n  if(conn) console.log(conn); \n  const db = conn.db(conf.db);\n  return db;\n}\n\nexport async function createCollections(db, names) {\n  for(let name of names){\n    await db.createCollection(name);\n    console.log(`Collection ${name} created`);\n  }\n}\n\nexport async function removeFs(db) {\n  await db.dropDatabase();\n}\n\nexport async function write(db, param) {\n  if (param.obj.constructor !== Array) {\n    param.obj = [param.obj];\n  }\n\n  const res = await db.collection(param.COLLNAME).insertMany(param.obj);\n\n  return res;\n}\n\nexport async function read(db, param) {\n  const res = await db\n    .collection(param.COLNAME)\n    .find(param.query, param.fields)\n    .toArray();\n    \n  return res;\n}\n\nexport async function update(db, param) {\n  const res = await db\n    .collection(param.COLNAME)\n    .updateOne(param.query, {$set: param.obj});\n\n  return res;\n}\n"]}