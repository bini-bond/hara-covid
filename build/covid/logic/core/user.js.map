{"version":3,"sources":["../../../../src/covid/logic/core/user.js"],"names":["phone","bid","name","userObj","User","uid","profile","save","u","writeUser","wid","findUser","readUser","fetchUsers","length","readAllUsers","email","password","role","v","validatePassword","toAuthJSON","t","setToken","token","writeAccess","removeToken","r","removeAccess","currentPassword","newPassword","status","msg","setPassword"],"mappings":"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","file":"user.js","sourcesContent":["import User from \"../../model/user\";\nimport {generate_id} from '../../../utils/tools'\n\nexport async function writeUser({ phone, bid, name }) {\n  const userObj = new User({\n    phone,\n    uid: generate_id(10),\n    profile: {name}\n  });\n\n  const u = await userObj.save();\n  if (!u) {\n    return 0;\n  }\n\n  return {\n    uid: u.uid,\n    name: u.profile.name\n  };\n}\n\n// export async function deleteUser(email) {\n//   const r = await User.removeUser(email);\n//   if (!r) {\n//     return 0;\n//   }\n\n//   return {\n    \n//   };\n// }\n\nexport async function readUser(wid) {\n  const u = await User.findUser(wid);\n\n  if (!u) return 0;\n\n  return u;\n}\n\nexport async function readAllUsers() {\n  const u = await User.fetchUsers();\n\n  if (!u.length) return 0;\n\n  return u;\n}\n\nexport async function writeAccess({ email, password, role }) {\n  let u = await User.findUser(email);\n\n  const v = u.validatePassword(password);\n\n  if (!v) return 0;\n\n  const t = await u.toAuthJSON();\n  await User.setToken(t.token, t.email);\n  if (!t) return 0;\n\n  return t;\n}\n\nexport async function removeAccess({ token, email }) {\n  let u = await User.findUser(email);\n\n  if (!u) return 0;\n\n  const r = await User.removeToken(token, email);\n  if (!r) return 0;\n\n  return r;\n}\n\nexport async function setPassword({ currentPassword, newPassword, email }) {\n  let u = await User.findUser(email);\n\n  if (!u){\n    return {\n      status: 0,\n      msg: \"User couldn't be found\"\n    };\n  }\n\n  if (!(await u.validatePassword(currentPassword))){\n    return {\n      status: 0,\n      msg: \"Incorrect current password\"\n    };\n  }\n\n  await u.setPassword(newPassword);\n  return {\n    status: 1\n  };\n}\n"]}