{"version":3,"sources":["../../../src/covid/logic/main.js"],"names":["param","console","log","obj","phone","name","User","findUserByPhone","u","status","result","uid","profile","r","info","createUser","comment","createExposure","getExposures","contacts","uploadContacts"],"mappings":";;;;;;;;qEASO,iBAA0BA,KAA1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLC,oBAAQC,GAAR,CAAYF,MAAMG,GAAlB;AADK,yBAEmBH,MAAMG,GAFzB,EAEGC,KAFH,cAEGA,KAFH,EAEUC,IAFV,cAEUA,IAFV;AAAA;AAAA,mBAIWC,eAAKC,eAAL,CAAqBH,KAArB,CAJX;;AAAA;AAICI,aAJD;;AAKLP,oBAAQC,GAAR,CAAYM,CAAZ;;AALK,iBAMFA,CANE;AAAA;AAAA;AAAA;;AAAA,6CAOI;AACLC,sBAAQ,IADH;AAELC,sBAAQ;AACNC,qBAAKH,EAAEG,GADD;AAENN,sBAAMG,EAAEI,OAAF,CAAUP;AAFV;AAFH,aAPJ;;AAAA;AAAA;AAAA,mBAeW,qBAAU,EAAED,YAAF,EAASC,UAAT,EAAV,CAfX;;AAAA;AAeCQ,aAfD;;AAAA,gBAiBAA,CAjBA;AAAA;AAAA;AAAA;;AAAA,6CAkBI;AACLJ,sBAAQ,KADH;AAELC,sBAAQ;AACNI,sBAAM;AADA;AAFH,aAlBJ;;AAAA;AAAA,6CA0BE;AACLL,sBAAQ,IADH;AAELC,sBAAQG;AAFH,aA1BF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeE,U;;;;;;sEAiCf,kBAA8Bf,KAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLC,oBAAQC,GAAR,CAAYF,MAAMG,GAAlB;AADK,0BAEoBH,MAAMG,GAF1B,EAEGQ,GAFH,eAEGA,GAFH,EAEQK,OAFR,eAEQA,OAFR;AAAA;AAAA,mBAIW,6BAAc,EAAEL,QAAF,EAAOK,gBAAP,EAAd,CAJX;;AAAA;AAICH,aAJD;;AAAA,gBAMAA,CANA;AAAA;AAAA;AAAA;;AAAA,8CAOI;AACLJ,sBAAQ,KADH;AAELC,sBAAQ;AACNI,sBAAM;AADA;AAFH,aAPJ;;AAAA;AAAA,8CAeE;AACLL,sBAAQ,IADH;AAELC,sBAAQG;AAFH,aAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeI,c;;;;;;sEAsBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEW,8BAFX;;AAAA;AAECJ,aAFD;;AAAA,gBAIAA,CAJA;AAAA;AAAA;AAAA;;AAAA,8CAKI;AACLJ,sBAAQ,KADH;AAELC,sBAAQ;AACNI,sBAAM;AADA;AAFH,aALJ;;AAAA;AAAA,8CAaE;AACLL,sBAAQ,IADH;AAELC,sBAAQG;AAFH,aAbF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeK,Y;;;;;;sEAoBf,kBAA8BlB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACGmB,oBADH,GACgBnB,MAAMG,GADtB,CACGgB,QADH;AAAA;AAAA,mBAEW,0BAAYA,QAAZ,CAFX;;AAAA;AAECN,aAFD;;AAAA,gBAIAA,CAJA;AAAA;AAAA;AAAA;;AAAA,8CAKI;AACLJ,sBAAQ,KADH;AAELC,sBAAQ;AACNI,sBAAM;AADA;AAFH,aALJ;;AAAA;AAAA,8CAaE;AACLL,sBAAQ;AADH,aAbF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeW,c;;;;;AAlFtB;;AACA;;AACA;;;;AACA","file":"main.js","sourcesContent":["\n\nimport {writeUser, writeAccess, removeAccess, deleteUser, readAllUsers, setPassword} from \"./core/user\";\nimport { writeExposure, readExposures } from \"./core/exposure\";\nimport User from '../model/user'\nimport { batchInsert } from \"./core/contact\";\n\n\n\nexport async function createUser(param) {\n  console.log(param.obj);\n  const { phone, name } = param.obj;\n\n  const u = await User.findUserByPhone(phone);\n  console.log(u)\n  if(u){\n    return {\n      status: \"ok\",\n      result: {\n        uid: u.uid,\n        name: u.profile.name\n      },\n    };\n  }\n  const r = await writeUser({ phone, name });\n\n  if (!r) {\n    return {\n      status: \"err\",\n      result: {\n        info: \"couldn't register user\"\n      }\n    };\n  }\n\n  return {\n    status: \"ok\",\n    result: r\n  };\n}\n\n\nexport async function createExposure(param) {\n  console.log(param.obj);\n  const { uid, comment } = param.obj;\n\n  const r = await writeExposure({ uid, comment });\n\n  if (!r) {\n    return {\n      status: \"err\",\n      result: {\n        info: \"couldn't write exposure\"\n      }\n    };\n  }\n\n  return {\n    status: \"ok\",\n    result: r\n  };\n}\n\n\nexport async function getExposures() {\n\n  const r = await readExposures();\n\n  if (!r) {\n    return {\n      status: \"err\",\n      result: {\n        info: \"couldn't write exposure\"\n      }\n    };\n  }\n\n  return {\n    status: \"ok\",\n    result: r\n  };\n}\n\n\nexport async function uploadContacts(param) {\n  const { contacts } = param.obj;\n  const r = await batchInsert(contacts);\n\n  if (!r) {\n    return {\n      status: \"err\",\n      result: {\n        info: \"couldn't upload data\",\n      },\n    };\n  }\n\n  return {\n    status: \"ok\",\n  };\n}\n\n\n"]}