{"version":3,"sources":["../../../src/covid/model/exposure.js"],"names":["exposureSchema","mongoose","Schema","eid","type","String","required","unique","uid","name","comment","diagnosisTS","Number","statics","fetchExposures","find","r","Exposure","model"],"mappings":";;;;;;AA0DA;;;;;;2cA1DA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAIA,IAAMA,iBAAiB,IAAIC,mBAASC,MAAb,CAAoB;AACzCC,OAAK,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAAgCC,QAAQ,IAAxC,EADoC;AAEzCC,OAAK,EAAEJ,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAFoC;AAGzCG,QAAMJ,MAHmC;AAIzCK,WAASL,MAJgC;AAKzCM,eAAaC;AAL4B,CAApB,CAAvB;;AAQA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEAZ,eAAea,OAAf,CAAuBC,cAAvB,2DAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACtB,KAAKC,IAAL,EADsB;;AAAA;AAChCC,WADgC;;AAAA,cAGjCA,CAHiC;AAAA;AAAA;AAAA;;AAAA,2CAGvB,CAHuB;;AAAA;AAAA,2CAK/BA,CAL+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxC;;AAQA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAIA,IAAMC,WAAWhB,mBAASiB,KAAT,CAAe,UAAf,EAA2BlB,cAA3B,CAAjB;;kBAEeiB,Q","file":"exposure.js","sourcesContent":["// import {\n//   write,\n//   update,\n//   read,\n//   dbConnect,\n// } from '../../mongo';\n\n// import config from '../../config/config';\n\n// const COLNAME = 'words';\n\n// let db;\n\n// async function init() {\n//   db = await dbConnect(config);\n// }\n\n// init();\n\n// export async function fwriteWord(obj) {\n//   const param = {\n//     COLNAME,\n//     obj,\n//   };\n\n//   const res = await write(db, param);\n\n//   if (res.ops.length == 1) {\n//     return res.ops[0];\n//   }\n\n//   return res.ops;\n// }\n\n// export async function freadWord(query, fields) {\n//   const param = {\n//     COLNAME,\n//     query,\n//     fields,\n//   };\n\n//   const res = await read(db, param);\n\n//   return res;\n// }\n\n// export async function fupdateWord(query, obj) {\n//   const param = {\n//     COLNAME,\n//     query,\n//     obj,\n//   };\n\n//   await update(db, param);\n\n//   return 1;\n// }\n\nimport mongoose from \"mongoose\";\n\nconst exposureSchema = new mongoose.Schema({\n  eid: { type: String, required: true, unique: true },\n  uid: { type: String, required: true},\n  name: String,\n  comment: String,\n  diagnosisTS: Number,\n});\n\n// exposureSchema.statics.fetchExposure = async function(uid) {\n//   const r = await this.find({\n//     uid\n//   });\n\n//   if (!r) return 0;\n\n//   return r;\n// };\n\nexposureSchema.statics.fetchExposures = async function() {\n  const r = await this.find();\n\n  if (!r) return 0;\n\n  return r;\n};\n\n// contactSchema.statics.fetchAll = async function () {\n//   const r = await this.find().select({wid: true, word: true, defintions: true, type: true, _id: true});\n\n//   if(!r)\n//     return r;\n\n//   return r;\n// }\n\n// exposureSchema.statics.countContacts = async function(uid) {\n//   const counts = await this.countDocuments({\n//     uid\n//   });\n\n//   return counts;\n// };\n\n\n\nconst Exposure = mongoose.model(\"exposure\", exposureSchema);\n\nexport default Exposure;\n"]}